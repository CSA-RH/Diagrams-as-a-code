# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Setup venv
      run: |
        python -m venv venv
        source venv/bin/activate
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
  #    run: |
   #     # stop the build if there are Python syntax errors or undefined names
    #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
     #   # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Get all changed python files
      id: changed-python-files
      uses: tj-actions/changed-files@v44
      with:
        # Avoid using single or double quotes for multiline patterns
        files: |
          **.py
    - name: List all changed files python files
      if: steps.changed-python-files.outputs.any_changed == 'true'
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-python-files.outputs.all_changed_files }}
      run: |
        for file in ${ALL_CHANGED_FILES}; do
          echo "$file was changed"
        done
    - name: TEST
      run: |
        ls -lisa
    - name: Generate images for all changed python files
      if: steps.changed-python-files.outputs.any_changed == 'true'
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-python-files.outputs.all_changed_files }}
      run: |
        for file in ${ALL_CHANGED_FILES}; do
          python $file
        done
    - name: TEST
      run: |
        ls -lisa
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/k8s-node.ign
          release/iso-config.ign
